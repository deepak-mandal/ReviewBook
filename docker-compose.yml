version: "3"
services:
  mongodbservice:
    image: mongo:latest
    container_name: "mongodb-user"
    hostname: localhost
    ports:
      - 27017:27017
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
  mysqlservice:
    image: mysql:latest
    container_name: mysql
    restart: always
    hostname: localhost
    network_mode: "host"
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 'Password'
      MYSQL_DATABASE: authuser
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  neo4j:
    image: neo4j:4.2.3
    container_name: neo4j
    restart: always
    network_mode: "host"
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      NEO4J_AUTH: neo4j/password
  eureka-server:
    build: eureka-server/
    container_name: eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8076:8076
  api-gateway:
    build: api-gateway/
    container_name: api-gateway
    depends_on:
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8086:8086
  login-service:
    container_name: login-service
    build: login-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8080:8080
    depends_on:
      - mysqlservice
      - eureka-server
    restart: always
  product-management:
    container_name: product-management
    build: product-management/
    hostname: localhost
    network_mode: host
    ports:
      - 8081:8081
    depends_on:
      - mongodbservice
      - eureka-server
    restart: always
  product-recommendation:
    container_name: product-recommendation
    build: product-recommendation/
    hostname: localhost
    network_mode: host
    ports:
      - 8083:8083
    depends_on:
      - neo4j
      - eureka-server
    restart: always
  review-management:
    container_name: review-management
    build: review-management/
    hostname: localhost
    network_mode: host
    ports:
      - 8084:8084
    depends_on:
      - mongodbservice
      - eureka-server
    restart: always
  user-registration-service:
    container_name: user-registration-service
    build: user-registration-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8082:8082
    depends_on:
      - mongodbservice
      - eureka-server
    restart: always
  product-webapp:
    build: product-webapp/
    image: product-webapp
    depends_on:
      - eureka-server
      - api-gateway
    restart: always
    container_name: product-webapp
    network_mode: "host"
    hostname: localhost
    ports:
      - "8099:8099"
